"""change meaning field to be nullable

Revision ID: 775648fe7cc0
Revises: 16b93d3c65ad
Create Date: 2024-07-29 13:19:17.822351

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '775648fe7cc0'
down_revision = '16b93d3c65ad'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('_alembic_tmp_chinese_character')
    with op.batch_alter_table('chinese_character', schema=None) as batch_op:
        batch_op.add_column(sa.Column('meaning', sa.String(length=256), nullable=True))
        batch_op.alter_column('character',
               existing_type=sa.VARCHAR(length=1),
               type_=sa.String(length=8),
               existing_nullable=False)
        batch_op.create_index(batch_op.f('ix_chinese_character_meaning'), ['meaning'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('chinese_character', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_chinese_character_meaning'))
        batch_op.alter_column('character',
               existing_type=sa.String(length=8),
               type_=sa.VARCHAR(length=1),
               existing_nullable=False)
        batch_op.drop_column('meaning')

    op.create_table('_alembic_tmp_chinese_character',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('character', sa.VARCHAR(length=8), nullable=False),
    sa.Column('pinyin', sa.VARCHAR(length=64), nullable=False),
    sa.Column('meaning', sa.VARCHAR(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
