"""add pinyin, meaning, recognition, writingtable instead of only UserCharacterStatus

Revision ID: 0403aba375f7
Revises: 775648fe7cc0
Create Date: 2024-07-31 00:12:18.831193

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0403aba375f7'
down_revision = '775648fe7cc0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_meaning_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('memory_strength', sa.Float(), nullable=False),
    sa.Column('last_practice', sa.DateTime(), nullable=False),
    sa.Column('next_practice', sa.DateTime(), nullable=False),
    sa.Column('interval', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['chinese_character.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'character_id', name='unique_user_meaning')
    )
    op.create_table('user_pinyin_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('memory_strength', sa.Float(), nullable=False),
    sa.Column('last_practice', sa.DateTime(), nullable=False),
    sa.Column('next_practice', sa.DateTime(), nullable=False),
    sa.Column('interval', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['chinese_character.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'character_id', name='unique_user_pinyin')
    )
    op.create_table('user_recognition_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('memory_strength', sa.Float(), nullable=False),
    sa.Column('last_practice', sa.DateTime(), nullable=False),
    sa.Column('next_practice', sa.DateTime(), nullable=False),
    sa.Column('interval', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['chinese_character.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'character_id', name='unique_user_recognition')
    )
    op.create_table('user_writing_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('memory_strength', sa.Float(), nullable=False),
    sa.Column('last_practice', sa.DateTime(), nullable=False),
    sa.Column('next_practice', sa.DateTime(), nullable=False),
    sa.Column('interval', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['chinese_character.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'character_id', name='unique_user_writing')
    )
    with op.batch_alter_table('user_character_status', schema=None) as batch_op:
        batch_op.drop_index('ix_user_character_status_status')

    op.drop_table('user_character_status')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_character_status',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('character_id', sa.INTEGER(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=64), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['chinese_character.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_character_status', schema=None) as batch_op:
        batch_op.create_index('ix_user_character_status_status', ['status'], unique=1)

    op.drop_table('user_writing_progress')
    op.drop_table('user_recognition_progress')
    op.drop_table('user_pinyin_progress')
    op.drop_table('user_meaning_progress')
    # ### end Alembic commands ###
